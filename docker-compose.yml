services:
  traefik:
    image: traefik:v2.9
    user: "0"  # root
    privileged: true
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80  # HTTP
      - --entrypoints.websecure.address=:443  # HTTPS
      - --certificatesresolvers.myresolver.acme.email=ckress@ufl.edu
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.myresolver.acme.tlschallenge=true

    ports:
      - "80:80"
      - "443:443"
    volumes:
      # So Traefik can read Docker labels and manage certificates
      - /var/run/docker.sock:/var/run/docker.sock:ro,Z
      - traefik-certificates:/letsencrypt
    networks:
      - app-network

  postgres:
    image: postgres:13
    restart: always
    env_file:
      - .db.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"  # for dev
    networks:
      - app-network
    labels:
      - "traefik.enable=false"

  server:
    build: ./server
    depends_on:
      - postgres
    env_file:
      - ./server/.env
    environment:
      - NODE_ENV=production
    ports:
      - "3000:3000"  # for dev
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`swampstudy.com`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=web,websecure"
      - "traefik.http.routers.api.priority=10"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
      - "traefik.http.services.api.loadbalancer.server.port=3000"

  client:
    build: ./client
    depends_on:
      - server
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      # HTTP router: listens on port 80 and redirects to HTTPS
      - "traefik.http.routers.client-http.rule=Host(`swampstudy.com`) || Host(`www.swampstudy.com`)"
      - "traefik.http.routers.client-http.entrypoints=web"
      - "traefik.http.routers.client-http.priority=1"
      - "traefik.http.routers.client-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      # HTTPS router: serves the client content over TLS
      - "traefik.http.routers.client.rule=Host(`swampstudy.com`) || Host(`www.swampstudy.com`)"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.priority=1"
      - "traefik.http.routers.client.tls=true"
      - "traefik.http.routers.client.tls.certresolver=myresolver"
      - "traefik.http.services.client.loadbalancer.server.port=80"

networks:
  app-network:

volumes:
  pgdata:
  traefik-certificates:
